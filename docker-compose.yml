#A compose.yml file allows you to manage multi-container applications. Here, 
#weâ€™ll define both a Django container and a PostgreSQL database container.

#The compose file makes use of an environment file called .env, which will 
#make it easy to keep the settings separate from the application code

services:
 db:
   image: postgres:17
   environment:
     POSTGRES_DB: ${POSTGRES_DB}
     POSTGRES_USER: ${POSTGRES_USER}
     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
   ports:
     - "5432:5432"
   volumes:
     - postgres_data:/var/lib/postgresql/data
   env_file:
     - .env
 
 web:
   build: .
   container_name: expense_tracker_web
   ports:
     - "8000:8000"
   depends_on:
     - db
   environment:
     DJANGO_SECRET_KEY: ${SECRET_KEY}
     DEBUG: ${DEBUG}
     DJANGO_ALLOWED_HOSTS: ${ALLOWED_HOSTS}
     DATABASE_ENGINE: ${POSTGRES_ENGINE}
     DATABASE_NAME: ${POSTGRES_DB}
     DATABASE_USERNAME: ${POSTGRES_USER}
     DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
     DATABASE_HOST: ${POSTGRES_HOST}
     DATABASE_PORT: ${POSTGRES_PORT}

   env_file:
     - .env
volumes:
   postgres_data: